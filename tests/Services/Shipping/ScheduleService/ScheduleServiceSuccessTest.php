<?php

namespace KiriminAja\Services\Shipping\ScheduleService;

require_once(__DIR__ . '/../ShippingMock.php');

use KiriminAja\Repositories\ShippingRepository;
use KiriminAja\Services\KiriminAja;
use KiriminAja\Services\Shipping\ScheduleService;
use KiriminAja\Services\Shipping\ShippingMock;
use Mockery\Mock;
use PHPUnit\Framework\TestCase;

class ScheduleServiceSuccessTest extends TestCase
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        (new ShippingMock())->shippingMock()
            ->shouldReceive([
                'schedules' => [
                    true,
                    [
                        'status' => true,
                        'text' => 'Success to fetch schedules data',
                        'schedules' => [
                            (object)[
                                "clock" => "2022-11-03 17:00:00",
                                "until" => "22:00",
                                "expired" => 1667475000,
                                "libur" => false
                            ],
                            (object)[
                                "clock" => "2022-11-04 08:00:00",
                                "until" => "22:00",
                                "expired" => 1667532600,
                                "libur" => false
                            ]
                        ]
                    ]
                ]
            ]);
    }

    public function test()
    {
        \Mockery::close();

        \Mockery::mock("overload:" . ShippingRepository::class)
            ->shouldReceive([
                "schedules" => [
                    true,
                    [
                        "status" => true,
                        "text" => "loaded",
                        "data" => [
                            "status" => true
                        ],
                        "schedules" => []
                    ]
                ]
            ]);

        $schedules = KiriminAja::getSchedules();

        self::assertTrue($schedules->status);
    }
}
